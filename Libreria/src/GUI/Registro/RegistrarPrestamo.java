/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI.Registro;

import DBCommands.ConnectDB;
import GUI.Consultas.ConsultaLibros;
import java.awt.Color;
import java.awt.Image;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import libreria.Book;
import libreria.Person;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import java.time.format.DateTimeFormatter;
import java.time.LocalDateTime;  


/**
 *
 * @author Allison
 */
public class RegistrarPrestamo extends javax.swing.JFrame {

    /**
     * Creates new form RegistrarPrestamo
     */
    public RegistrarPrestamo() {
        initComponents();
        //Color of the JFrame
        this.getContentPane().setBackground(Color.decode("#588C7E")); //F5CC7E o F5D28E o F3CC89 | Azul 0a043c
        //Center the JFrame
        this.setLocationRelativeTo(null);
        //Icono del JFrame
        ImageIcon img = new ImageIcon("C:\\Users\\Allison\\Documents\\GitHub\\Libreria\\LOGO.png");
        this.setIconImage(img.getImage());
        
        
        ArrayList<Book> books = new ArrayList();
        ArrayList<Person> people = new ArrayList();
        try {
            //Get the books from the db
            books = ConnectDB.get_NotBorrowed();
            setBooks(books);
            //Get the people from the db
            people = ConnectDB.get_People();
            setPeople(people);
        } catch (SQLException ex) {
            Logger.getLogger(RegistrarPrestamo.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    public void scaleImage(){
        ImageIcon imagen1 = new ImageIcon(getClass().getResource("/Images/LOGO.PNG"));
        Icon fondo1 = new ImageIcon(imagen1.getImage().getScaledInstance(lblCoverPage.getWidth(), lblCoverPage.getHeight(), Image.SCALE_SMOOTH));
        lblCoverPage.setIcon(fondo1);
        this.repaint();   
    }
    
    private void setBooks(ArrayList<Book> books){
        DefaultTableModel model = new DefaultTableModel(){
            //Para hacer que las celdas no puedan editarse pero si seleccionarse
            @Override
            public boolean isCellEditable(int filas, int columnas){
                return false;
            }
        };
        
        int cantidadLibros = books.size();
        
        //Columnas
        model.addColumn("ID");
        model.addColumn("Title");
       
        if(cantidadLibros>0){
            for(int i=0; i<cantidadLibros; i++){
                Book actual = books.get(i);
                System.out.println(actual.getTitle());
                model.addRow(new Object[]{actual.getID(),
                                          actual.getTitle()});
                tableBooks.setModel(model);
            }
        }else{
            tableBooks.setModel(new DefaultTableModel());
            JOptionPane.showMessageDialog(null,"There are no books registered yet.");   
        }
    }
    
    private void setPeople(ArrayList<Person> people){
        DefaultTableModel model = new DefaultTableModel(){
            //Para hacer que las celdas no puedan editarse pero si seleccionarse
            @Override
            public boolean isCellEditable(int filas, int columnas){
                return false;
            }
        };
        int cantidadPersonas = people.size();
       
        //Columnas
        model.addColumn("ID");
        model.addColumn("Name");
      
        if(cantidadPersonas>0){
            for(int i=0; i<cantidadPersonas; i++){
                Person actual = people.get(i);
                
                model.addRow(new Object[]{actual.getID(),
                                          actual.getFirstname() +" "+
                                          actual.getLastname()});
                tablePeople.setModel(model);
                //lblCantidad.setText(Integer.toString(cantidadPrestamos));
            }
        }else{
            tablePeople.setModel(new DefaultTableModel());
            //lblCantidad.setText("0");
            JOptionPane.showMessageDialog(null,"There are no people registered yet.");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableBooks = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablePeople = new javax.swing.JTable();
        lblTitle = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnRegister = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        lblCoverPage = new javax.swing.JLabel();

        tableBooks.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "Title"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableBooks.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableBooksMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableBooks);

        tablePeople.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tablePeople);

        lblTitle.setFont(new java.awt.Font("Segoe Script", 0, 24)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Register Loan");

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Select the new borrowed book");

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Select the person that has borrowed the book");

        btnRegister.setBackground(new java.awt.Color(236, 209, 137));
        btnRegister.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnRegister.setForeground(new java.awt.Color(255, 255, 255));
        btnRegister.setText("Register Loan");
        btnRegister.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRegisterMouseClicked(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(172, 188, 138));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 3));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblCoverPage, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblCoverPage, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(164, 164, 164)
                        .addComponent(btnRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(100, 100, 100))
            .addGroup(layout.createSequentialGroup()
                .addGap(312, 312, 312)
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(lblTitle)
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 404, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(btnRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tableBooksMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableBooksMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tableBooks.getModel();
        int row = tableBooks.getSelectedRow();
        
        int ID = (int) model.getValueAt(row, 0);
        try {
            //Sacamos el coverpage
            
            String coverPage = ConnectDB.get_BookCoverPage(ID);
         
            this.lblCoverPage.setIcon((new ImageIcon(coverPage)));
        } catch (SQLException ex) {
            Logger.getLogger(ConsultaLibros.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tableBooksMouseClicked

    private void btnRegisterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRegisterMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tableBooks.getModel();
        int row = tableBooks.getSelectedRow();
        
        DefaultTableModel model2 = (DefaultTableModel) tablePeople.getModel();
        int row2 = tablePeople.getSelectedRow();
        
        System.out.println("_______________");
        System.out.println(row+"********"+row2);
        
        int IDBook = (int) model.getValueAt(row, 0);
        int IDPerson = (int) model2.getValueAt(row2, 0);
        System.out.println(IDBook);
        System.out.println(IDPerson);
        
        //Date now
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm:ss");
        LocalDateTime now = LocalDateTime.now();
        //Giving the right format to the date
        String fecha = dtf.format(now);
        fecha = fecha.substring(0,10);
        fecha = fecha.replace("/", ",");
        String fecha2 = dtf.format(now);
        fecha2 = fecha2.substring(0,10);
        fecha2 = fecha2.replace("/", ",");
        System.out.println(fecha);
        
        try {
            //call function to insert on db
            int resultado = ConnectDB.insertLoan(IDPerson, IDBook, fecha, fecha2);
            if (resultado==0){
                JOptionPane.showMessageDialog(null, "Loan succesfully registered!");
            
            }
            else if(resultado == 2){
                JOptionPane.showMessageDialog(null, "The book is already on loan");
            }else{
                JOptionPane.showMessageDialog(null, "Error, the loan couldn´t be saved :(");
            }
            
            //Get new books and people array
            ArrayList<Book> books = new ArrayList();
            ArrayList<Person> people = new ArrayList();
            books = ConnectDB.get_NotBorrowed();
            setBooks(books);
            people = ConnectDB.get_People();
            setPeople(people);
        } catch (SQLException ex) {
            
            Logger.getLogger(RegistrarPrestamo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnRegisterMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistrarPrestamo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistrarPrestamo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistrarPrestamo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistrarPrestamo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegistrarPrestamo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRegister;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblCoverPage;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tableBooks;
    private javax.swing.JTable tablePeople;
    // End of variables declaration//GEN-END:variables
}
